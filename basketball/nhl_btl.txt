
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("BradleyTerry2")
> 
> library("RPostgreSQL")
> 
> drv <- dbDriver("PostgreSQL")
> 
> con <- dbConnect(drv, dbname="hockey")
> 
> query <- dbSendQuery(con, "
+ select
+ team_id as team,
+ opponent_id as opponent,
+ team_score as team_score,
+ opponent_score as opponent_score,
+ (case when team_score>opponent_score then 1.0
+  else 0.0 end) as outcome
+ from href.results
+ where year=2016
+ ;")
> 
> games <- fetch(query,n=-1)
> dim(games)
[1] 2642    5
> 
> fit <- BTm(outcome,team,opponent,data=games)
> 
> fit
Bradley Terry model fit by glm.fit 

Call:  BTm(outcome = outcome, player1 = team, player2 = opponent, data = games)

Coefficients:
     ..ARI       ..BOS       ..BUF       ..CAR       ..CBJ       ..CGY  
-0.5302845  -0.2414076  -0.4501272  -0.4028517  -0.5983249  -0.6801250  
     ..CHI       ..COL       ..DAL       ..DET       ..EDM       ..FLA  
-0.0141372  -0.4005832   0.2001819  -0.3414030  -0.8566200  -0.0004987  
     ..LAK       ..MIN       ..MTL       ..NJD       ..NSH       ..NYI  
-0.2308189  -0.2712721  -0.4725998  -0.4823716  -0.0741887  -0.0920940  
     ..NYR       ..OTT       ..PHI       ..PIT       ..SJS       ..STL  
-0.0296048  -0.4924875  -0.2387920   0.1345441   0.0396149   0.0211278  
     ..TBL       ..TOR       ..VAN       ..WPG       ..WSH  
-0.0891639  -0.8119262  -0.6765634  -0.4940022   0.3708494  

Degrees of Freedom: 2642 Total (i.e. Null);  2613 Residual
Null Deviance:	    3663 
Residual Deviance: 3550 	AIC: 3608
> 
> out <- as.data.frame(BTabilities(fit))
> out <- out[with(out, order(-ability)), ]
> 
> out <- subset(out,TRUE,select=c(ability))
> out$ability <- exp(out$ability)
> 
> out$team <- rownames(out)
> out
      ability team
WSH 1.4489648  WSH
DAL 1.2216249  DAL
PIT 1.1440151  PIT
SJS 1.0404100  SJS
STL 1.0213525  STL
ANA 1.0000000  ANA
FLA 0.9995014  FLA
CHI 0.9859623  CHI
NYR 0.9708292  NYR
NSH 0.9284965  NSH
TBL 0.9146957  TBL
NYI 0.9120195  NYI
LAK 0.7938832  LAK
PHI 0.7875787  PHI
BOS 0.7855214  BOS
MIN 0.7624090  MIN
DET 0.7107724  DET
COL 0.6699292  COL
CAR 0.6684112  CAR
BUF 0.6375471  BUF
MTL 0.6233795  MTL
NJD 0.6173176  NJD
OTT 0.6111044  OTT
WPG 0.6101794  WPG
ARI 0.5884375  ARI
CBJ 0.5497317  CBJ
VAN 0.5083610  VAN
CGY 0.5065536  CGY
TOR 0.4440020  TOR
EDM 0.4245948  EDM
> 
> scored <- aggregate(team_score ~ team, games, sum)
> allowed <- aggregate(opponent_score ~ team, games, sum)
> 
> df <- merge(out,scored)
> df <- merge(df,allowed)
> 
> fit <- lm(log(ability) ~ log(team_score/opponent_score), df)
> 
> fit

Call:
lm(formula = log(ability) ~ log(team_score/opponent_score), data = df)

Coefficients:
                   (Intercept)  log(team_score/opponent_score)  
                       -0.2578                          2.1026  

> quit("no")
