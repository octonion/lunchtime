
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library("BradleyTerry2")
> 
> library("RPostgreSQL")
> 
> drv <- dbDriver("PostgreSQL")
> 
> con <- dbConnect(drv, dbname="hockey")
> 
> query <- dbSendQuery(con, "
+ select
+ team_id as team,
+ opponent_id as opponent,
+ team_score as team_score,
+ opponent_score as opponent_score,
+ (case
+  when team_score>opponent_score then 1.0
+  when team_score=opponent_score then 0.5
+  else 0.0 end) as outcome
+ from href.results
+ where year=1975
+ ;")
> 
> games <- fetch(query,n=-1)
> dim(games)
[1] 1542    5
> 
> fit <- BTm(outcome,team,opponent,data=games)
> 
> fit
Bradley Terry model fit by glm.fit 

Call:  BTm(outcome = outcome, player1 = team, player2 = opponent, data = games)

Coefficients:
    ..BOS      ..BUF      ..CBH      ..CGS      ..DET      ..KCS      ..LAK  
 0.233890   0.827225  -0.056246  -0.875784  -0.699683  -1.212986   0.507399  
    ..MNS      ..MTL      ..NYI      ..NYR      ..PHI      ..PIT      ..STL  
-0.846329   0.772269   0.201426   0.113831   0.876422   0.154908  -0.063729  
    ..TOR      ..VAN      ..WSH  
-0.147881   0.003794  -2.010392  

Degrees of Freedom: 1542 Total (i.e. Null);  1525 Residual
Null Deviance:	    1802 
Residual Deviance: 1497 	AIC: 1866
> 
> out <- as.data.frame(BTabilities(fit))
> out <- out[with(out, order(-ability)), ]
> 
> out <- subset(out,TRUE,select=c(ability))
> out$ability <- exp(out$ability)
> 
> out$team <- rownames(out)
> out
      ability team
PHI 2.4022901  PHI
BUF 2.2869636  BUF
MTL 2.1646726  MTL
LAK 1.6609654  LAK
BOS 1.2635060  BOS
NYI 1.2231455  NYI
PIT 1.1675511  PIT
NYR 1.1205623  NYR
VAN 1.0038009  VAN
ATF 1.0000000  ATF
CBH 0.9453069  CBH
STL 0.9382592  STL
TOR 0.8625340  TOR
DET 0.4967427  DET
MNS 0.4289869  MNS
CGS 0.4165355  CGS
KCS 0.2973081  KCS
WSH 0.1339361  WSH
> 
> scored <- aggregate(team_score ~ team, games, sum)
> allowed <- aggregate(opponent_score ~ team, games, sum)
> 
> df <- merge(out,scored)
> df <- merge(df,allowed)
> 
> fit <- lm(log(ability) ~ log(team_score/opponent_score), df)
> 
> fit

Call:
lm(formula = log(ability) ~ log(team_score/opponent_score), data = df)

Coefficients:
                   (Intercept)  log(team_score/opponent_score)  
                       -0.1026                          1.9526  

> quit("no")
